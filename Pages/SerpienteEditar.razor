@page "/Serpiente-editar/{veneno}"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>Serpiente</h3>

<EditForm Model="@serpiente" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Nombre">Nombre del animal</label>
        <InputText id="Nombre" @bind-Value="serpiente.Nombre" class="form-control" />
        <ValidationMessage For="() => serpiente.Nombre" />
    </div>
    <div class="form-group">
        <label for="Especie">Especie del animal</label>
        <InputText id="Especie" @bind-Value="serpiente.Especie" class="form-control" />
        <ValidationMessage For="() => serpiente.Especie" />
    </div>
    <div class="form-group">
        <label for="Alimentacion">Alimentacion del animal</label>
        <InputText id="Alimentacion" @bind-Value="serpiente.Alimentacion" class="form-control" />
        <ValidationMessage For="() => serpiente.Alimentacion" />
    </div>
    <div class="form-group">
        <label for="TiempoVida">Tiempo de vida del animal</label>
        <InputText id="TiempoVida" @bind-Value="serpiente.TiempoVida" class="form-control" />
        <ValidationMessage For="() => serpiente.TiempoVida" />
    </div>
    <div class="form-group">
        <label for="Veneno">Veneno de la serpiente</label>
        <InputText id="Veneno" @bind-Value="serpiente.Veneno" class="form-control" />
        <ValidationMessage For="() => serpiente.Veneno" />
    </div>
    <div class="form-group">
        <label for="Longitud">Longitud de la serpiente</label>
        <InputText id="Longitud" @bind-Value="serpiente.Longitud" class="form-control" />
        <ValidationMessage For="() => serpiente.Longitud" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">GuardarCambios</button>
    </div>
</EditForm>

@code {

    [Parameter]
    public string veneno { get; set; }

    private Serpientes serpiente = new Serpientes();
    List<Serpientes> serpientes = new List<Serpientes>();


    protected async Task Guardar()
    {
        await localStorage.SetItemAsync("serpientes", serpientes);

        //Al finalizar de guardar regresamos al formulario original
        NavigationManager.NavigateTo("/serpiente-crear");

    }

    protected override async Task OnInitializedAsync()
    {   //Cargar todos las serpientes guardados
        serpientes = await localStorage.GetItemAsync<List<Serpientes>>("serpientes");

        if (serpiente == null)
            serpientes = new List<Serpientes>();

        serpiente = serpientes.Find(c => c.Veneno == veneno);
    }
}
